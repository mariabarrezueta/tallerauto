// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TallerAuto.Server.Data;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250506232219_AddAnioTV")]
    partial class AddAnioTV
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TallerAuto.Server.Models.Cliente", b =>
                {
                    b.Property<int>("IDCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCliente"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TallerAuto.Server.Models.HistorialServicio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdenID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrdenID");

                    b.ToTable("HistorialServicios");
                });

            modelBuilder.Entity("TallerAuto.Server.Models.Mecanico", b =>
                {
                    b.Property<int>("IDMecanico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDMecanico"));

                    b.Property<int>("AniosExperiencia")
                        .HasColumnType("int");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Habilidades")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("MarcasExpertas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdenesActivas")
                        .HasColumnType("int");

                    b.HasKey("IDMecanico");

                    b.ToTable("Mecanicos");
                });

            modelBuilder.Entity("TallerAuto.Server.Models.OrdenTrabajo", b =>
                {
                    b.Property<int>("IDOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDOrden"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MecanicoAsignadoID")
                        .HasColumnType("int");

                    b.Property<int>("TipoReparacion")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoID")
                        .HasColumnType("int");

                    b.HasKey("IDOrden");

                    b.HasIndex("MecanicoAsignadoID");

                    b.HasIndex("VehiculoID");

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("TallerAuto.Server.Models.Vehiculo", b =>
                {
                    b.Property<int>("IDVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDVehiculo"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IDVehiculo");

                    b.HasIndex("ClienteID");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("TallerAuto.Server.Models.HistorialServicio", b =>
                {
                    b.HasOne("TallerAuto.Server.Models.OrdenTrabajo", "Orden")
                        .WithMany("Historial")
                        .HasForeignKey("OrdenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("TallerAuto.Server.Models.OrdenTrabajo", b =>
                {
                    b.HasOne("TallerAuto.Server.Models.Mecanico", "MecanicoAsignado")
                        .WithMany()
                        .HasForeignKey("MecanicoAsignadoID");

                    b.HasOne("TallerAuto.Server.Models.Vehiculo", "Vehiculo")
                        .WithMany("Ordenes")
                        .HasForeignKey("VehiculoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MecanicoAsignado");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("TallerAuto.Server.Models.Vehiculo", b =>
                {
                    b.HasOne("TallerAuto.Server.Models.Cliente", "Cliente")
                        .WithMany("Vehiculos")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TallerAuto.Server.Models.Cliente", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("TallerAuto.Server.Models.OrdenTrabajo", b =>
                {
                    b.Navigation("Historial");
                });

            modelBuilder.Entity("TallerAuto.Server.Models.Vehiculo", b =>
                {
                    b.Navigation("Ordenes");
                });
#pragma warning restore 612, 618
        }
    }
}
